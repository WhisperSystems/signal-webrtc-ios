From e41d51094a99afea3d11bc2a8e6a36725d12e709 Mon Sep 17 00:00:00 2001
From: Michael Kirk <michael.code@endoftheworl.de>
Date: Sun, 11 Feb 2018 15:21:38 -0800
Subject: [PATCH] iOS8 compatibility

---
 sdk/objc/Framework/Classes/Common/helpers.mm                     | 3 ++-
 sdk/objc/Framework/Classes/Metal/RTCMTLVideoView.m               | 9 ++++++++-
 .../Framework/Classes/PeerConnection/RTCCameraVideoCapturer.m    | 3 ++-
 .../Classes/Video/RTCAVFoundationVideoCapturerInternal.mm        | 3 ++-
 tools_webrtc/ios/build_ios_libs.py                               | 2 +-
 5 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/sdk/objc/Framework/Classes/Common/helpers.mm b/sdk/objc/Framework/Classes/Common/helpers.mm
index 4afa15d11..5876ee86e 100644
--- a/sdk/objc/Framework/Classes/Common/helpers.mm
+++ b/sdk/objc/Framework/Classes/Common/helpers.mm
@@ -120,7 +120,8 @@ int GetProcessorCount() {
 #if defined(__IPHONE_9_0) && defined(__IPHONE_OS_VERSION_MAX_ALLOWED) \
     && __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_9_0
 bool GetLowPowerModeEnabled() {
-  if (isOperatingSystemAtLeastVersion(9.0)) {
+  //if (isOperatingSystemAtLeastVersion(9.0)) {
+  if (@available(iOS 9, *)) {
     // lowPoweredModeEnabled is only available on iOS9+.
     return [NSProcessInfo processInfo].lowPowerModeEnabled;
   }
diff --git a/sdk/objc/Framework/Classes/Metal/RTCMTLVideoView.m b/sdk/objc/Framework/Classes/Metal/RTCMTLVideoView.m
index e36cb3ab4..012c2ecd8 100644
--- a/sdk/objc/Framework/Classes/Metal/RTCMTLVideoView.m
+++ b/sdk/objc/Framework/Classes/Metal/RTCMTLVideoView.m
@@ -60,7 +60,14 @@
 
 + (BOOL)isMetalAvailable {
 #if defined(RTC_SUPPORTS_METAL)
-  return YES;
+  // Signal supports iOS8/64bit, so a compiler macro is insufficient.
+  // Instead, we dynamically check if MetalKit framework is available.
+  // return YES;
+  if ([MTKView class]) {
+      return YES;
+  } else {
+      return NO;
+  }
 #else
   return NO;
 #endif
diff --git a/sdk/objc/Framework/Classes/PeerConnection/RTCCameraVideoCapturer.m b/sdk/objc/Framework/Classes/PeerConnection/RTCCameraVideoCapturer.m
index 92374844c..3eddb7642 100644
--- a/sdk/objc/Framework/Classes/PeerConnection/RTCCameraVideoCapturer.m
+++ b/sdk/objc/Framework/Classes/PeerConnection/RTCCameraVideoCapturer.m
@@ -255,7 +255,8 @@ static inline BOOL IsMediaSubTypeSupported(FourCharCode mediaSubType) {
   NSString *reasonString = nil;
 #if defined(__IPHONE_9_0) && defined(__IPHONE_OS_VERSION_MAX_ALLOWED) && \
     __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_9_0
-  if ([UIDevice isIOS9OrLater]) {
+  //if ([UIDevice isIOS9OrLater]) {
+  if (@available(iOS 9.0, *)) {
     NSNumber *reason = notification.userInfo[AVCaptureSessionInterruptionReasonKey];
     if (reason) {
       switch (reason.intValue) {
diff --git a/sdk/objc/Framework/Classes/Video/RTCAVFoundationVideoCapturerInternal.mm b/sdk/objc/Framework/Classes/Video/RTCAVFoundationVideoCapturerInternal.mm
index 287ecdd71..99d27b209 100644
--- a/sdk/objc/Framework/Classes/Video/RTCAVFoundationVideoCapturerInternal.mm
+++ b/sdk/objc/Framework/Classes/Video/RTCAVFoundationVideoCapturerInternal.mm
@@ -269,7 +269,8 @@
   NSString *reasonString = nil;
 #if defined(__IPHONE_9_0) && defined(__IPHONE_OS_VERSION_MAX_ALLOWED) && \
     __IPHONE_OS_VERSION_MAX_ALLOWED >= __IPHONE_9_0
-  if ([UIDevice isIOS9OrLater]) {
+  //if ([UIDevice isIOS9OrLater]) {
+  if (@available(iOS 9.0, *)) {
     NSNumber *reason = notification.userInfo[AVCaptureSessionInterruptionReasonKey];
     if (reason) {
       switch (reason.intValue) {
diff --git a/tools_webrtc/ios/build_ios_libs.py b/tools_webrtc/ios/build_ios_libs.py
index 0051982e0..39cc88668 100755
--- a/tools_webrtc/ios/build_ios_libs.py
+++ b/tools_webrtc/ios/build_ios_libs.py
@@ -31,7 +31,7 @@ SDK_LIB_NAME = 'librtc_sdk_objc.a'
 SDK_FRAMEWORK_NAME = 'WebRTC.framework'
 
 DEFAULT_ARCHS = ENABLED_ARCHS = ['arm64', 'arm', 'x64', 'x86']
-IOS_DEPLOYMENT_TARGET = '9.0'
+IOS_DEPLOYMENT_TARGET = '8.0'
 LIBVPX_BUILD_VP9 = False
 
 sys.path.append(os.path.join(SCRIPT_DIR, '..', 'libs'))
-- 
2.12.2

